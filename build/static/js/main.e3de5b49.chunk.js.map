{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","ref","type","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descriptionRef","imageRef","createFish","parseFloat","description","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","desc","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.e3de5b49.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getFunName } from '../helpers'\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  myInput = React.createRef()\n  goToStore = event => {\n    // 1. prevent form from submitting\n    event.preventDefault()\n    // 2. get the text user entered\n    const storeName = this.myInput.current.value\n    // 3. route to '/store/text-user-entered\n    this.props.history.push(`/store/${storeName}`)\n  }\n\n  render() {\n    return (\n      <form className='store-selector' onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          ref={this.myInput}\n          type='text'\n          required placeholder='Store name'\n          defaultValue={getFunName()}\n        />\n        <button type='submit'>Visit store → </button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"top\">\n        <h1>\n          Catch\n          <span className=\"ofThe\">\n            <span className=\"of\">Of</span>\n            <span className=\"the\">The</span>\n          </span>\n          Day\n        </h1>\n        <h3 className=\"tagline\">\n          <span>{this.props.tagline}</span>\n        </h3>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key]\n    const count = this.props.order[key]\n    const isAvailable = fish && fish.status === 'available'\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 250, exit: 250}\n    }\n    // ensure fish is loaded before we continue\n    if(!fish) return null\n    if(!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      )\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <TransitionGroup component='span' className='count'>\n            <CSSTransition\n              classNames='count'\n              key={count}\n              timeout={{ enter: 250, exit: 250}}\n            >\n              <span>{count}</span>\n            </CSSTransition>\n          </TransitionGroup>\n          lbs {fish.name}\n          {formatPrice(count * fish.price)}\n          <button onClick={() => this.props.removeFromOrder(key)}>x</button>\n        </li>\n      </CSSTransition>\n    )\n  }\n  render () {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key]\n      const count = this.props.order[key]\n      const isAvailable = fish && fish.status === 'available'\n\n      if(isAvailable) {\n        return prevTotal + (count * fish.price)\n      }\n      return prevTotal\n    }, 0)\n\n    return (\n      <div className='order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef()\n  priceRef = React.createRef()\n  statusRef = React.createRef()\n  descriptionRef = React.createRef()\n  imageRef = React.createRef()\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = (event) => {\n    event.preventDefault()\n    const fish ={\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      description: this.descriptionRef.current.value,\n      image: this.imageRef.current.value,\n    }\n    this.props.addFish(fish)\n    event.currentTarget.reset()\n  }\n  render() {\n    return (\n      <form className='fish-edit' onSubmit={this.createFish}>\n        <input name='name' ref={this.nameRef} type='text' placeholder='Name' />\n        <input name='price' ref={this.priceRef} type='text' placeholder='Price' />\n        <select name='status' ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name='description' ref={this.descriptionRef} placeholder='Description' />\n        <input name='image' ref={this.imageRef} type='text' placeholder='Image' />\n        <button type='submit'>+ Add Fish</button>\n      </form>\n    )\n  }\n}\n\nexport default AddFishForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    updateFish: PropTypes.func,\n    index: PropTypes.string,\n  }\n\n  handleChange = (event) => {\n    // update the fish\n    // 1. take a copy of state\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    }\n    this.props.updateFish(this.props.index, updatedFish)\n  }\n\n  render() {\n    return (\n      <div className='fish-edit'>\n        <input type='text' name='name' onChange={this.handleChange} value={this.props.fish.name} />\n        <input type='text' name='price' onChange={this.handleChange} value={this.props.fish.price} />\n        <select type='text' name='status' onChange={this.handleChange} value={this.props.fish.status}>\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n        <textarea name='description' onChange={this.handleChange} value={this.props.fish.description}></textarea>\n        <input type='text' name='image' onChange={this.handleChange} value={this.props.fish.image} />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    )\n  }\n}\n\nexport default EditFishForm","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage store inventory</p>\n        <button\n          className='google'\n          onClick={() => this.props.authenticate('Google')}\n        >\n          Login with Google\n        </button>\n        <button\n          className='facebook'\n          onClick={() => this.props.authenticate('Facebook')}\n        >\n          Login with Facebook\n        </button>\n      </nav>\n    );\n  }\n}\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;\n","import Rebase from 're-base'\nimport firebase from 'firebase'\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBniny9o_CoJCmJdVTUrSnFwKYfLFN789g\",\n  authDomain: \"catch-of-the-day-oalbacha.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-oalbacha-default-rtdb.firebaseio.com/\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database())\n\n// named export\nexport { firebaseApp }\n\n// default export\nexport default base","import React from 'react'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport PropTypes from 'prop-types'\nimport firebase from 'firebase'\nimport base, {firebaseApp} from '../base'\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  }\n\n  state ={\n    uid: null,\n    owner: null,\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    // 1. look up current store in the firebase db\n    const store = await base.fetch(this.props.storeId, { context: this })\n    console.log(store)\n    //2. claim it as owner if not owner\n    if(!store.owner) {\n      // set the current user as owner\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. set the state of inventory to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    })\n  }\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]()\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n  }\n\n  logout = async () => {\n    console.log('Logging out!')\n    await firebase.auth().signOut()\n    this.setState({uid: null})\n  }\n\n  render () {\n    const logout = <button onClick={this.logout}>Log out!</button>\n    // 1. check if they are logged in\n    if(!this.state.uid) { return <Login authenticate={this.authenticate} />}\n    // 2. check if they are the owner\n    if(!this.state.owner) { return (\n      <>\n        <div>Sorry you are not the owner of this store</div>\n        {logout}\n      </>\n    )}\n\n    // 3. they must be the owner render inventory\n    return (\n      <div className='inventory'>\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => {\n          return (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />)\n        })}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    )\n  }\n}\n\nexport default Inventory","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react'\nimport { formatPrice } from '../helpers'\nimport PropTypes from 'prop-types'\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func\n  }\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details\n    const isAvailable = status === 'available'\n    return (\n      <li className='menu-fish'>\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">{name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? 'Add To Order →' : 'Sold Out!'}\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Fish","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Order from './Order'\nimport Inventory from './Inventory'\nimport sampleFishes from '../sample-fishes'\nimport Fish from './Fish'\nimport base from '../base'\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  }\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match\n    // first reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId)\n\n    if(localStorageRef) {\n      this.setState({order: JSON.parse(localStorageRef)})\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref)\n  }\n\n  addFish = fish => {\n    // 1. take a copy of the existing state\n    const fishes = {...this.state.fishes}\n    // 2. Add the new piece of state to the copy you took\n    fishes[`fish${Date.now()}`] = fish\n    // 3. Set the new state to state with the setState built-in method\n    this.setState({ fishes })\n  }\n\n  updateFish = (key, updatedFish) => {\n    // 1. take a copy of current state\n    const fishes = {...this.state.fishes}\n    // 2. update the state\n    fishes[key] = updatedFish\n    // 3. set state\n    this.setState({ fishes })\n  }\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = {...this.state.fishes}\n    // 2. update state\n    fishes[key] = null\n    // 3. set state\n    this.setState({ fishes })\n  }\n\n  loadSampleFishes = () => {\n    this.setState({fishes: sampleFishes})\n  }\n\n  addToOrder = key => {\n    // 1. copy state\n    const order = { ...this.state.order }\n    // 2. add to order or update quantity\n    order[key] = order[key] + 1 || 1\n    // 3. call setState to update state object\n    this.setState({ order })\n  }\n\n  removeFromOrder = key => {\n    // 1. copy state\n    const order = { ...this.state.order }\n    // 2. remove item from order - not mirroring to firebase so use delete key\n    delete order[key]\n    // 3. call setState to update state object\n    this.setState({ order })\n  }\n\n  render() {\n    return (\n      <div className='catch-of-the-day'>\n        <div className=\"menu\">\n          <Header tagline='Fresh Seafood Market' />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key =>\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />)}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n)\n\nexport default NotFound","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={StorePicker} />\n      <Route path='/store/:storeId' component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router","import React from 'react'\nimport { render } from 'react-dom'\nimport Router from './components/Router'\nimport './css/style.css'\n\nrender(<Router />, document.querySelector('#main'))"],"sourceRoot":""}
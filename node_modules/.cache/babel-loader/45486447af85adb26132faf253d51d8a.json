{"ast":null,"code":"import _classCallCheck from \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from '../helpers';\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available'; // ensure fish is loaded before we continue\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 14\n          }\n        }, \"Sorry \", fish ? fish.name : 'fish', \" is no longer available\");\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNAmes: \"order\",\n        key: key,\n        timeout: {\n          enter: 250,\n          exit: 250\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, count, \" lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \"x\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: ul,\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/omar/Code/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","name","enter","exit","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","ul","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,K;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAAAC,GAAG,EAAI;AACnB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,UAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C,CAHmB,CAInB;;AACA,UAAG,CAACN,IAAJ,EAAU,OAAO,IAAP;;AACV,UAAG,CAACK,WAAJ,EAAiB;AACf,4BAAO;AAAI,UAAA,GAAG,EAAEN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqBC,IAAI,GAAGA,IAAI,CAACO,IAAR,GAAe,MAAxC,4BAAP;AACD;;AACD,0BACE,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAC,OAA1B;AAAkC,QAAA,GAAG,EAAER,GAAvC;AAA4C,QAAA,OAAO,EAAE;AAAES,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,IAAI,EAAE;AAApB,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,GAAG,EAAEV,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,KADH,WACeH,IAAI,CAACO,IADpB,EAEGX,WAAW,CAACO,KAAK,GAAGH,IAAI,CAACU,KAAd,CAFd,eAGE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKT,KAAL,CAAWU,eAAX,CAA2BZ,GAA3B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF;AASD,K;;;;;;;WACD,kBAAU;AAAA;;AACR,UAAMa,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMW,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYlB,GAAZ,EAAoB;AAChD,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C;;AAEA,YAAGD,WAAH,EAAgB;AACd,iBAAOY,SAAS,GAAId,KAAK,GAAGH,IAAI,CAACU,KAAjC;AACD;;AACD,eAAOO,SAAP;AACD,OATa,EASX,CATW,CAAd;AAWA,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAEC,EAA5B;AAAgC,QAAA,SAAS,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,QAAQ,CAACO,GAAT,CAAa,KAAKrB,WAAlB,CADH,CAFF,eAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASF,WAAW,CAACmB,KAAD,CAApB,CADF,CALF,CADF;AAWD;;;;EA5CiBpB,KAAK,CAACyB,S;;AA+C1B,eAAevB,KAAf","sourcesContent":["import React from 'react'\nimport { formatPrice } from '../helpers'\n\nclass Order extends React.Component {\n  renderOrder = key => {\n    const fish = this.props.fishes[key]\n    const count = this.props.order[key]\n    const isAvailable = fish && fish.status === 'available'\n    // ensure fish is loaded before we continue\n    if(!fish) return null\n    if(!isAvailable) {\n      return <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n    }\n    return (\n      <CSSTransition classNAmes='order' key={key} timeout={{ enter: 250, exit: 250 }}>\n        <li key={key}>\n          {count} lbs {fish.name}\n          {formatPrice(count * fish.price)}\n          <button onClick={() => this.props.removeFromOrder(key)}>x</button>\n        </li>\n      </CSSTransition>\n    )\n  }\n  render () {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key]\n      const count = this.props.order[key]\n      const isAvailable = fish && fish.status === 'available'\n\n      if(isAvailable) {\n        return prevTotal + (count * fish.price)\n      }\n      return prevTotal\n    }, 0)\n\n    return (\n      <div className='order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component={ul} className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order"]},"metadata":{},"sourceType":"module"}